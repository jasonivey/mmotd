# modified message of the day
[core]
output_color=true

# The location of the output template, "mmotd_template.json", can be
#  specified on the command line or with the following variable:
# template_path="$HOME/.config/mmotd/mmotd_template.json"

[fortune]
# fortune: the facility to print a random, hopefully interesting, adage
#  the 'fortune.db_directory' can specify a directory which contains the
#  file specified by 'fortune.db_file'.  The 'fortune.db_directory'
#  variables can be used specify a non-default directory where fortune
#  files are located. In addition, the 'fortune.db_file' variable can
#  be used to specify a non-default fortune file (whether it be a .dat)
#  database file or a text file which contains a list of fortunes seperated
#  by a line with only a '%' character.
#
# The default value for the 'fortune.db_directory' variable in macOS is:
#  db_directory="/usr/local/opt/fortune/share/games/fortunes"
# The default value for the 'fortune.db_directory' variable in Linux is:
#  db_directory="/usr/share/games/fortunes"
# The default value for 'fortune.file_name' variable is:
#  file_name="softwareengineering"

[location]
# This is the same value that is the last couple of segments of the file linked to /etc/localtime
#  i.e. /etc/localtime -> /var/db/timezone/zoneinfo/America/Denver
timezone="America/Denver"

# The following three values are used to look-up the local whether, http://wttr.in/Albuquerque%20NM%20USA
city="Albuquerque"
state="NM"
country="USA"

[logging]
# Which log level (and below) to output:
#  none, fatal, error, warning, info, debug, verbose
#  The value can be specified as a string or as a number:
#  "none" -> 0, "fatal" -> 1, "error" -> 2, "warning" -> 3, "info" -> 4, "debug" -> 5, "verbose" -> 6
severity="verbose"
# Control whether to output a colorized log file. This looks strange when
#  opening the log file in a text editor, but it works well with the following
#  command:
#  cat /tmp/mmotd-00007ccf.log | less -RFX
output_color=true
# This is mainly used for debugging. This option will flush the contents of the
#  log file after every line has been written. This provides the opportunity to
#  see the live status of the application at any given moment. (Especially
#  handy when debugging an application crash.) As a result though, enabling
#  this option may have performance reprocussions.
flush_on_write=false
